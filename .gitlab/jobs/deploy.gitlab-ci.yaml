deploying:
  image:
    name: $CI_REGISTRY_PULL/dimmaryanto93/k8s-kubectl-helm:1.21.1-release
  stage: deploy
  tags:
    - docker
  environment:
    name: production
    url: http://NODE_CLUSTER_IP:$NODE_PORT
  when: manual
  before_script:
    - kubectl config set-context --current --namespace="$KUBE_NAMESPACE"
    - sh .gitlab/runners/entrypoint.sh
    - sh .gitlab/runners/regcred-entrypoint.sh
  script:
    - kubectl apply -f .k8s/deployment.yaml -n $KUBE_NAMESPACE
    - kubectl apply -f .k8s/service.yaml -n $KUBE_NAMESPACE
  after_script:
    - NODE_PORT_ENV=$(kubectl get service $CI_PROJECT_PATH_SLUG -n $KUBE_NAMESPACE -o=jsonpath='{.spec.ports[?(@.port==8080)].nodePort}')
    - echo "NODE_PORT=$NODE_PORT_ENV" >> deploy.env
    - echo "NODE_CLUSTER_IP=$NODE_CLUSTER_IP" >> deploy.env
  artifacts:
    reports:
      dotenv: deploy.env
    paths:
      - .k8s/
    name: $CI_PROJECT_NAME-$CI_COMMIT_TAG
  only:
    - /-release/

stop_review_apps:
  image:
    name: $CI_REGISTRY_PULL/dimmaryanto93/k8s-kubectl-helm:1.21.1-release
  stage: review
  tags:
    - docker
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  when: manual
  before_script:
    - kubectl config set-context --current --namespace="$KUBE_NAMESPACE"
    - sh .gitlab/runners/entrypoint.sh
  script:
    - kubectl delete -f .k8s/deployment.yaml -n $KUBE_NAMESPACE
    - kubectl delete -f .k8s/service.yaml -n $KUBE_NAMESPACE
  only:
    - /-release/
